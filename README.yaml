name : Terraform Module Security-Group

# License of this project
license: "APACHE"

# Canonical GitHub repo
github_repo: clouddrove/terraform-aws-security-group

# Badges to display
badges:
  - name: "Latest Release"
    image: "https://img.shields.io/github/release/clouddrove/terraform-aws-security-group.svg"
    url: "https://github.com/clouddrove/terraform-aws-security-group/releases/latest"
  - name: "tfsec"
    image: "https://github.com/clouddrove/terraform-aws-security-group/actions/workflows/tfsec.yml/badge.svg"
    url: "https://github.com/clouddrove/terraform-aws-security-group/actions/workflows/tfsec.yml"
  - name: "Licence"
    image: "https://img.shields.io/badge/License-APACHE-blue.svg"
    url: "LICENSE.md"

#  description of this project
description: |-
  This terraform module creates set of Security Group and Security Group Rules resources in various combinations.

# extra content
include:
  - "terraform.md"

# How to use this project
# How to use this project
usage: |-
  Here are some examples of how you can use this module in your inventory structure:
  ### NEW_SECURITY_GROUP
  Here is an example of how you can use this module in your inventory structure:
  ```hcl
  # use this
    module "security_group" {
      source        = "clouddrove/security-group/aws"
      version       = "1.3.0"
      name        = "security-group"
      environment = "test"
      label_order = ["name", "environment"]

      vpc_id                    = module.vpc.vpc_id
      new_enable_security_group = true
      allowed_ip                = ["172.16.0.0/16", "10.0.0.0/16"]
      allowed_ports             = [22, 27017]
      security_groups           = []
      max_entries               = 5
      prefix_list_enabled       = true
      prefix_list_id            = []
      entry = [
        {
          cidr        = "10.0.0.0/16"
          description = "VPC CIDR"
        },
        {
          cidr        = "10.10.0.0/24"
          description = "VPC CIDR"
        }
      ]
    }
  ```
  ### NEW_SECURITY_GROUP_WITH_EGRESS
    module "security_group" {
      source        = "clouddrove/security-group/aws"
      version       = "1.3.0"
      name        = "security-group"
      environment = "test"
      label_order = ["name", "environment"]

      vpc_id                 = module.vpc.vpc_id
      prefix_list_enabled    = false
      allowed_ip             = ["172.16.0.0/16", "10.0.0.0/16"]
      allowed_ipv6           = ["2405:201:5e00:3684:cd17:9397:5734:a167/128"]
      allowed_ports          = [22, 27017]
      security_groups        = ["sg-xxxxxxxxx"]
      prefix_list_id         = ["pl-6da54004"]
      egress_rule            = true
      egress_allowed_ip      = ["172.16.0.0/16", "10.0.0.0/16"]
      egress_allowed_ports   = [22, 27017]
      egress_protocol        = "tcp"
      egress_prefix_list_ids = ["pl-xxxxxxxxx"]
      egress_security_groups = ["sg-xxxxxxxxx"]

    }
  ```
  ### UPDATED_EXISTING
  module "security_group" {
      source        = "clouddrove/security-group/aws"
      version       = "1.3.0"
      name        = "security-group"
      environment = "test"
      label_order = ["name", "environment"]

      is_external     = true
      existing_sg_id  = "sg-xxxxxxxxxxxx"
      vpc_id          = module.vpc.vpc_id
      allowed_ip      = ["172.16.0.0/16", "10.0.0.0/16"]
      allowed_ports   = [22, 27017]
      security_groups = ["sg-xxxxxxxxxxxxx"]
    }
  ```
