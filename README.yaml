---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name : Terraform AWS Subnet

# License of this project
license: "APACHE"

# Canonical GitHub repo
github_repo: clouddrove/terraform-aws-security-group

# Badges to display
badges:
  - name: "Latest Release"
    image: "https://img.shields.io/github/release/clouddrove/terraform-aws-security-group.svg"
    url: "https://github.com/clouddrove/terraform-aws-security-group/releases/latest"
  - name: "tfsec"
    image: "https://github.com/clouddrove/terraform-aws-security-group/actions/workflows/tfsec.yml/badge.svg"
    url: "https://github.com/clouddrove/terraform-aws-security-group/actions/workflows/tfsec.yml"
  - name: "Licence"
    image: "https://img.shields.io/badge/License-APACHE-blue.svg"
    url: "LICENSE.md"

prerequesties:
  - name: Terraform 1.5.4
    url: https://learn.hashicorp.com/terraform/getting-started/install.html
#  description of this project
description: |-
  This terraform module creates set of Security Group and Security Group Rules resources in various combinations.

# extra content
include:
  - "terraform.md"

# How to use this project
usage: |-
  Here are some examples of how you can use this module in your inventory structure:
  ### Basic
  Here is an example of how you can use this module in your inventory structure:
  ```hcl
  # use this
    module "security_group" {
      source        = "clouddrove/security-group/aws"
      version       = "2.0.0"
      name        = local.name
      environment = local.environment
      vpc_id      = module.vpc.vpc_id

      ## INGRESS Rules
      new_sg_ingress_rules_with_cidr_blocks = [{
        rule_count  = 1
        from_port   = 20
        protocol    = "udp"
        to_port     = 22
        cidr_blocks = [module.vpc.vpc_cidr_block, "172.16.0.0/16"]
        },
        {
          rule_count  = 2
          from_port   = 27017
          protocol    = "tcp"
          to_port     = 27017
          cidr_blocks = ["172.16.0.0/16"]
        }
      ]

      ## EGRESS Rules
      new_sg_egress_rules_with_cidr_blocks = [{
        rule_count  = 1
        from_port   = 22
        protocol    = "tcp"
        to_port     = 22
        cidr_blocks = [module.vpc.vpc_cidr_block, "172.16.0.0/16"]
        },
        {
          rule_count  = 2
          from_port   = 27017
          protocol    = "tcp"
          to_port     = 27017
          cidr_blocks = ["172.16.0.0/16"]
      }]
    }
  ```

  ### ONLY RULES
    module "security_group_rules" {
      source        = "clouddrove/security-group/aws"
      version       = "2.0.0"
      name           = local.name
      environment    = local.environment
      vpc_id         = "vpc-xxxxxxxxx"
      new_sg         = false
      existing_sg_id = "sg-xxxxxxxxx"

      ## INGRESS Rules
      existing_sg_ingress_rules_with_cidr_blocks = [{
        rule_count  = 1
        from_port   = 20
        protocol    = "udp"
        to_port     = 22
        cidr_blocks = ["10.9.0.0/16"]
        },
        {
          rule_count  = 2
          from_port   = 27017
          protocol    = "tcp"
          to_port     = 27017
          cidr_blocks = ["10.9.0.0/16"]
        }
      ]

      existing_sg_ingress_rules_with_self = [{
        rule_count = 1
        from_port  = 20
        protocol   = "tcp"
        to_port    = 22
        },
        {
          rule_count = 2
          from_port  = 270
          protocol   = "tcp"
          to_port    = 270
        }
      ]

      existing_sg_ingress_rules_with_source_sg_id = [{
        rule_count               = 1
        from_port                = 22
        protocol                 = "tcp"
        to_port                  = 22
        source_security_group_id = "sg-xxxxxxxxx"
        },
        {
          rule_count               = 2
          from_port                = 27017
          protocol                 = "tcp"
          to_port                  = 27017
          source_security_group_id = "sg-xxxxxxxxx"
        },
        {
          rule_count               = 3
          from_port                = 22
          protocol                 = "tcp"
          to_port                  = 22
          source_security_group_id = "sg-xxxxxxxxx"
      }]

      ## EGRESS Rules
      existing_sg_egress_rules_with_cidr_blocks = [{
        rule_count  = 1
        from_port   = 22
        protocol    = "tcp"
        to_port     = 22
        cidr_blocks = ["10.9.0.0/16"]
        },
        {
          rule_count  = 2
          from_port   = 27017
          protocol    = "tcp"
          to_port     = 27017
          cidr_blocks = ["10.9.0.0/16"]
      }]

      existing_sg_egress_rules_with_self = [{
        rule_count = 1
        from_port  = 20
        protocol   = "tcp"
        to_port    = 22
        },
        {
          rule_count = 2
          from_port  = 270
          protocol   = "tcp"
          to_port    = 270
      }]

      existing_sg_egress_rules_with_source_sg_id = [{
        rule_count               = 1
        from_port                = 22
        protocol                 = "tcp"
        to_port                  = 22
        source_security_group_id = "sg-xxxxxxxxx"
        },
        {
          rule_count               = 2
          from_port                = 27017
          protocol                 = "tcp"
          to_port                  = 27017
          source_security_group_id = "sg-xxxxxxxxx"
        },
        {
          rule_count               = 3
          from_port                = 22
          protocol                 = "tcp"
          to_port                  = 22
          source_security_group_id = "sg-xxxxxxxxx"
      }]
    }
  ```

    ### PREFIX LIST
    module "security_group" {
      source              = "clouddrove/security-group/aws"
      version             = "2.0.0"
      name                = local.name
      environment         = local.environment
      vpc_id              = module.vpc.vpc_id
      prefix_list_enabled = true
      entry = [{
        cidr = "10.19.0.0/16"
      }]

      ## INGRESS Rules
      new_sg_ingress_rules_with_prefix_list = [{
        rule_count = 1
        from_port  = 22
        protocol   = "tcp"
        to_port    = 22
        },
        {
          rule_count = 2
          from_port  = 20
          protocol   = "tcp"
          to_port    = 21
        }
      ]
      ## EGRESS Rules
      new_sg_egress_rules_with_prefix_list = [{
        rule_count = 1
        from_port  = 22
        protocol   = "tcp"
        to_port    = 22
        },
        {
          rule_count = 2
          from_port  = 20
          protocol   = "tcp"
          to_port    = 21
        }
      ]
    }
  ```