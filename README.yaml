---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name: Terraform AWS Security Group

# License of this project
license: "APACHE"

# Canonical GitHub repo
github_repo: clouddrove/terraform-aws-security-group

# Badges to display
badges:
  - name: "Terraform"
    image: "https://img.shields.io/badge/terraform-v1.1.7-green"
    url: "https://www.terraform.io"
  - name: "Licence"
    image: "https://img.shields.io/badge/License-APACHE-blue.svg"
    url: "LICENSE.md"
  - name: "tfsec"
    image: "https://github.com/clouddrove/terraform-aws-security-group/actions/workflows/tfsec.yml/badge.svg"
    url: "https://github.com/clouddrove/terraform-aws-security-group/actions/workflows/tfsec.yml"
  - name: "static-checks"
    image: "https://github.com/clouddrove/terraform-aws-security-group/actions/workflows/terraform.yml/badge.svg"
    url: "https://github.com/clouddrove/terraform-aws-security-group/actions/workflows/terraform.yml"
    
#  description of this project
# yamllint disable rule:line-length
description: |-
  This terraform module creates set of Security Group and Security Group Rules resources in various combinations.

# extra content
include:
  - "terraform.md"

# How to use this project
# yamllint disable rule:line-length
usage: |-
  ### NEW_SECURITY_GROUP
  Here is an example of how you can use this module in your inventory structure:
  ```hcl
  # use this
    module "security_group" {
      source        = "clouddrove/security-group/aws"
      version       = "1.3.0"
      name        = "security-group"
      environment = "test"
      label_order = ["name", "environment"]
    
      vpc_id                = module.vpc.vpc_id
      allowed_ip            = ["172.16.0.0/16", "10.0.0.0/16"]
      allowed_ports         = [22, 27017]
      security_groups       = ["sg-xxxxxxxxxxxx"]
      prefix_list_ids       = ["pl-xxxxxxxxxxxx"]
    }
  ```
  ### NEW_SECURITY_GROUP_WITH_EGRESS
    module "security_group" {
      source        = "clouddrove/security-group/aws"
      version       = "1.3.0"
      name        = "security-group"
      environment = "test"
      label_order = ["name", "environment"]
    
      vpc_id                = module.vpc.vpc_id
      allowed_ip            = ["172.16.0.0/16", "10.0.0.0/16"]
      allowed_ipv6          = ["2405:201:5e00:3684:cd17:9397:5734:a167/128"]
      allowed_ports         = [22, 27017]
      security_groups       = ["sg-xxxxxxxxx"]
      prefix_list_ids       = ["pl-6da54004"]
    
      egress_rule            = true
      egress_allowed_ip      = ["172.16.0.0/16", "10.0.0.0/16"]
      egress_allowed_ports   = [22, 27017]
      egress_protocol        = "tcp"
      egress_prefix_list_ids = ["pl-xxxxxxxxx"]
      egress_security_groups = ["sg-xxxxxxxxx"]
    
    }
  ```
  ### UPDATED_EXISTING
  module "security_group" {
      source        = "clouddrove/security-group/aws"
      version       = "1.3.0"
      name        = "security-group"
      environment = "test"
      label_order = ["name", "environment"]
    
      is_external     = true
      existing_sg_id  = "sg-xxxxxxxxxxxx"
      vpc_id          = module.vpc.vpc_id
      allowed_ip      = ["172.16.0.0/16", "10.0.0.0/16"]
      allowed_ports   = [22, 27017]
      security_groups = ["sg-xxxxxxxxxxxxx"]
    }
  ```